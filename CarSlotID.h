#pragma once

#include "stdafx.h"
#include "stdio.h"

enum CAR_SLOT_ID : int
{
	__INVALID = -1,
	BASE,
	FRONT_BUMPER,
	REAR_BUMPER,
	LEFT_SIDE_MIRROR,
	RIGHT_SIDE_MIRROR,
	BODY,
	WIDE_BODY,
	ROOF,
	TOP,
	HOOD,
	TRUNK,
	SKIRT,
	SPOILER,
	ENGINE,
	HEADLIGHT,
	BRAKELIGHT,
	EXHAUST,
	DOOR_LEFT,
	DOOR_RIGHT,
	DOOR_PANEL_LEFT,
	DOOR_PANEL_RIGHT,
	DOOR_SILL_LEFT,
	DOOR_SILL_RIGHT,
	FENDER,
	QUARTER,
	HOOD_UNDER,
	TRUNK_UNDER,
	FRONT_BRAKE,
	REAR_BRAKE,
	FRONT_WHEEL,
	REAR_WHEEL,
	SPINNER,
	WING_MIRROR,
	LICENSE_PLATE,
	TRUNK_AUDIO,
	TRUNK_AUDIO_COMP_0,
	TRUNK_AUDIO_COMP_1,
	TRUNK_AUDIO_COMP_2,
	TRUNK_AUDIO_COMP_3,
	TRUNK_AUDIO_COMP_4,
	TRUNK_AUDIO_COMP_5,
	TRUNK_AUDIO_COMP_6,
	TRUNK_AUDIO_COMP_7,
	TRUNK_AUDIO_COMP_8,
	TRUNK_AUDIO_COMP_9,
	TRUNK_AUDIO_COMP_10,
	TRUNK_AUDIO_COMP_11,
	DAMAGE_FRONT,
	DAMAGE_REAR,
	DAMAGE_LEFT,
	DAMAGE_RIGHT,
	DAMAGE_TOP,
	DECAL_HOOD,
	DECAL_FRONT_WINDOW,
	DECAL_REAR_WINDOW,
	DECAL_LEFT_DOOR,
	DECAL_RIGHT_DOOR,
	DECAL_LEFT_QUARTER,
	DECAL_RIGHT_QUARTER,
	WIDEBODY_DECAL_LEFT_DOOR,
	WIDEBODY_DECAL_RIGHT_DOOR,
	WIDEBODY_DECAL_LEFT_QUARTER,
	WIDEBODY_DECAL_RIGHT_QUARTER,
	BASE_PAINT,
	VINYL_LAYER0,
	VINYL_LAYER1,
	VINYL_LAYER2,
	VINYL_LAYER3,
	PAINT_ENGINE,
	PAINT_SPOILER,
	PAINT_BRAKE,
	PAINT_EXHAUST,
	PAINT_AUDIO,
	PAINT_RIM,
	PAINT_SPINNER,
	PAINT_ROOF,
	PAINT_MIRROR,
	VINYL_COLOUR0_0,
	VINYL_COLOUR0_1,
	VINYL_COLOUR0_2,
	VINYL_COLOUR0_3,
	VINYL_COLOUR1_0,
	VINYL_COLOUR1_1,
	VINYL_COLOUR1_2,
	VINYL_COLOUR1_3,
	VINYL_COLOUR2_0,
	VINYL_COLOUR2_1,
	VINYL_COLOUR2_2,
	VINYL_COLOUR2_3,
	VINYL_COLOUR3_0,
	VINYL_COLOUR3_1,
	VINYL_COLOUR3_2,
	VINYL_COLOUR3_3,
	KIT_CARBON,
	HOOD_CARBON,
	DOOR_CARBON,
	TRUNK_CARBON,
	DECAL_HOOD_TEX0,
	DECAL_HOOD_TEX1,
	DECAL_HOOD_TEX2,
	DECAL_HOOD_TEX3,
	DECAL_HOOD_TEX4,
	DECAL_HOOD_TEX5,
	DECAL_HOOD_TEX6,
	DECAL_HOOD_TEX7,
	DECAL_FRONT_WINDOW_TEX0,
	DECAL_FRONT_WINDOW_TEX1,
	DECAL_FRONT_WINDOW_TEX2,
	DECAL_FRONT_WINDOW_TEX3,
	DECAL_FRONT_WINDOW_TEX4,
	DECAL_FRONT_WINDOW_TEX5,
	DECAL_FRONT_WINDOW_TEX6,
	DECAL_FRONT_WINDOW_TEX7,
	DECAL_REAR_WINDOW_TEX0,
	DECAL_REAR_WINDOW_TEX1,
	DECAL_REAR_WINDOW_TEX2,
	DECAL_REAR_WINDOW_TEX3,
	DECAL_REAR_WINDOW_TEX4,
	DECAL_REAR_WINDOW_TEX5,
	DECAL_REAR_WINDOW_TEX6,
	DECAL_REAR_WINDOW_TEX7,
	DECAL_LEFT_DOOR_TEX0,
	DECAL_LEFT_DOOR_TEX1,
	DECAL_LEFT_DOOR_TEX2,
	DECAL_LEFT_DOOR_TEX3,
	DECAL_LEFT_DOOR_TEX4,
	DECAL_LEFT_DOOR_TEX5,
	DECAL_LEFT_DOOR_TEX6,
	DECAL_LEFT_DOOR_TEX7,
	DECAL_RIGHT_DOOR_TEX0,
	DECAL_RIGHT_DOOR_TEX1,
	DECAL_RIGHT_DOOR_TEX2,
	DECAL_RIGHT_DOOR_TEX3,
	DECAL_RIGHT_DOOR_TEX4,
	DECAL_RIGHT_DOOR_TEX5,
	DECAL_RIGHT_DOOR_TEX6,
	DECAL_RIGHT_DOOR_TEX7,
	DECAL_LEFT_QUARTER_TEX0,
	DECAL_LEFT_QUARTER_TEX1,
	DECAL_LEFT_QUARTER_TEX2,
	DECAL_LEFT_QUARTER_TEX3,
	DECAL_LEFT_QUARTER_TEX4,
	DECAL_LEFT_QUARTER_TEX5,
	DECAL_LEFT_QUARTER_TEX6,
	DECAL_LEFT_QUARTER_TEX7,
	DECAL_RIGHT_QUARTER_TEX0,
	DECAL_RIGHT_QUARTER_TEX1,
	DECAL_RIGHT_QUARTER_TEX2,
	DECAL_RIGHT_QUARTER_TEX3,
	DECAL_RIGHT_QUARTER_TEX4,
	DECAL_RIGHT_QUARTER_TEX5,
	DECAL_RIGHT_QUARTER_TEX6,
	DECAL_RIGHT_QUARTER_TEX7,
	WINDOW_TINT,
	NEON,
	NEON_ENGINE,
	NEON_CABIN,
	NEON_TRUNK,
	CABIN_NEON_FRAME,
	HEADLIGHT_BULB,
	DOOR_STYLE,
	HYDRAULICS,
	NOS_PURGE,
	CUSTOM_HUD,
	HUD_BACKING_COLOUR,
	HUD_NEEDLE_COLOUR,
	HUD_CHARACTER_COLOUR,
	CV,
	WHEEL_MANUFACTURER,
	MISC,
	__NUM = 170,
	__MODEL_FIRST = 0,
	__MODEL_LAST = 62,
	__MODEL_NUM = 63,
	__FIRST_NONRENDER = 63,
	__LAST_NONRENDER = 169,
	__NONRENDER_NUM = 107,
	__ATTACHMENT_MODEL_FIRST = 47,
	__ATTACHMENT_MODEL_LAST = 51,
	__ATTACHMENT_MODEL_NUM = 5,
	__DECAL_MODEL_FIRST = 52,
	__DECAL_MODEL_LAST = 58,
	__DECAL_MODEL_NUM = 7,
};

struct CarSlotIDName
{
	CAR_SLOT_ID CarSlotID;
	char const* Name;
};

CarSlotIDName* CarSlotIDNames = (CarSlotIDName*)0x802DE8;
int *CarPartSlotMap = (int*)0x802960;

char const* GetCarSlotIDName(int CarSlotID)
{
	if (CarSlotID >= 0x40302010) // Animations (to use with CameraInfo)
	{
		switch (CarSlotID)
		{
		case 0x40302010: default: return "ANIM0";
		case 0x40302011: return "ANIM1";
		case 0x40302012: return "ANIM2";
		case 0x40302013: return "ANIM3";
		case 0x40302014: return "ANIM4";
		case 0x40302015: return "ANIM5";
		case 0x40302016: return "ANIM6";
		}
	}

	if (CarSlotID < 0 || CarSlotID >= __NUM)
		return "NONE";
	return CarSlotIDNames[CarSlotID].Name;
}

int GetCarSlotIDFromName(char const* Name)
{
	for (int i = 0; i < __NUM; ++i)
	{
		if (strcmp(CarSlotIDNames[i].Name, Name) == 0)
			return CarSlotIDNames[i].CarSlotID;
	}
	return __INVALID;
}

int GetCarPartFromSlot(int CarSlotID)
{
	if (CarSlotID < 0 || CarSlotID >= __NUM)
		return -1;
	return CarPartSlotMap[CarSlotID];
}

int GetCarSlotIDFromPart(int CarPartID)
{
	for (int i = 0; i < __NUM; ++i)
	{
		if (CarPartSlotMap[i] == CarPartID)
			return i;
	}
	return __INVALID;
}